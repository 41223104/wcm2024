var tipuesearch = {"pages":[{"title":"About","text":"cmsimde 內容管理系統 倉儲: https://github.com/mdecycu/cmsimde_site 網站: https://mde.tw/cmsimde_site/ 簡報: https://mde.tw/cmsimde_site/reveal 網誌: https://mde.tw/cmsimde_site/blog","tags":"misc","url":"./pages/about/"},{"title":"w8課程","text":"1.教育的本質看課程內容 培養對學習的渴望和對世界的好奇心，培養對學習的渴望和對世界的好奇心。 廣泛的學習經驗：鼓勵學生探索不同科目和學科的廣泛教育的重要性。應該促進智識好奇心和批判性思維。 2.如何將影片嵌入網頁 上傳影片到youtube上，之後到自己的youtube影片下，點分享選擇第一個，把右側超連結程式碼複製，編輯網站，點Source code，把內容複製貼上。","tags":"w8","url":"./2024-Spring-w8-blog-tutorial.html"},{"title":"w6課程","text":"第六週作業 Git的歷史及創作人 問題：請問git 的發展歷史，還有git想要解決甚麼問題? ChatGPT的Ans： Git 是由 Linus Torvalds 在 2005 年開始開發的分散式版本控制系統。以下是 Git 的發展歷史和它想要解決的問題： 誕生（2005年）： Git 的開發始於 Linus Torvalds 對 Linux 內核版本控制系統 BitKeeper 的使用問題。由於許可證問題，BitKeeper 對 Linux 內核社區的使用受到限制，因此 Linus Torvalds 決定開發一個替代方案。 首次發布（2005年）： Git 的首次發布是在 2005 年。最初的版本已經具備基本的版本控制功能，包括提交、分支和合併等。 社區支持（2005年至今）： Git 很快得到了開源社區的廣泛支持和貢獻。許多開發者開始使用 Git 來管理他們的專案，並為 Git 做出了貢獻，改進了其性能和功能。 Github 的出現（2008年）： Github 是一個基於 Git 的程式碼托管平台，於 2008 年推出。它的出現極大地促進了 Git 的普及和使用，成為了全球最大的程式碼托管平台之一。 持續發展（2005年至今）： 自 Git 誕生以來，它持續得到改進和發展。許多功能不斷被添加進來，性能得到了提高，以滿足日益增長的開發需求。 廣泛應用（2005年至今）： Git 已成為了許多軟體開發團隊的標準版本控制系統，並得到了廣泛的應用。無論是小型團隊還是大型企業，Git 都成為了他們管理程式碼的首選工具之一。 GitLab 和 Bitbucket 的出現（2011年和2008年）： 除了 Github 外，還出現了其他的 Git 托管平台，如 GitLab 和 Bitbucket。它們為開發者提供了另外的選擇，推動了 Git 在專案托管方面的進一步發展。 持續改進（2005年至今）： Git 的開發和改進仍在持續進行中。Git 社區不斷收集用戶反饋，修復 bug，增加新功能，以確保 Git 保持在版本控制系統領域的領先地位。 Git 的目標是解決分散式軟體開發中的版本控制問題。它旨在提供一個高效、靈活且易於使用的工具，使開發者能夠有效地管理專案的版本，進行協作開發，並在需要時輕鬆地進行代碼更改的追蹤和回滾。 -Git創作人 Linus Torvalds 是 Git 的創始人之一，他是一位芬蘭的計算機科學家，最著名的貢獻是 Linux 作業系統的創建。 出生： Linus Benedict Torvalds 於 1969 年 12 月 28 日出生於芬蘭赫爾辛基市。 教育背景： 在赫爾辛基大學學習計算機科學，於 1996 年獲得碩士學位。 Linux 的創建： 在大學期間，開始編寫 Linux 作業系統的原始版本。於 1991 年發布了第一個版本，這使得他成為了自由軟體和開源軟體運動的重要人物之一。 Git 的開發： Linus Torvalds 在 2005 年開始為 Linux 內核開發一個新的版本控制系統，即 Git。他因對 BitKeeper 版本控制系統的不滿而啟動了這個項目。 個人特點： Linus Torvalds 以他的直率和技術才能而聞名。他通常在互聯網上以非常直接的方式進行溝通，並且對於程式碼的品質和系統的性能有著非常高的要求。 對開源社區的貢獻： 除了 Linux 和 Git 外，還是開源社區的活躍參與者，並且經常在各種技術討論中發表見解。 獲獎與榮譽： 在計算機科學領域的貢獻獲得了許多獎項和榮譽，包括ACM計算機系統獎、圖靈獎等。 總的來說，Linus Torvalds 以他的技術才能和對開源運動的貢獻而聞名於世，他的創作不僅對計算機科學領域產生了深遠的影響，也影響了整個軟體工程界。 Git能解決的專業領域問題 問題：一名機械設計工程師，能如何應用Git解決AutoCAD的製圖相關問題? ChatGPT的Ans： 機械設計工程師可以利用 Git 來解決 AutoCAD 製圖相關的問題，提高團隊協作效率和版本管理。以下是一些應用 Git 的方式： 版本控制： 使用 Git 對 AutoCAD 圖紙進行版本控制，可以輕鬆追蹤圖紙的修改歷史、恢復到之前的版本，並避免不同版本之間的混淆和衝突。 分支管理： 使用 Git 的分支功能來處理不同的圖紙修改和實驗性功能。例如，可以在不影響主要工作流程的情況下，創建新的分支來實驗不同的設計方案或修改。 協作開發： 團隊成員可以通過 Git 分享和協作開發 AutoCAD 圖紙。他們可以在各自的本地環境中進行工作，然後通過 Git 將更改推送到共享的存儲庫中，以便其他人審查、合併和反饋。 衝突解決： 當多個工程師同時修改同一個圖紙時，可能會發生衝突。Git 提供了衝突解決的工具和機制，可以幫助團隊成員快速解決衝突，合併不同的修改。 審查和討論： 通過 Git 的分支和提交歷史，團隊可以方便地進行審查和討論圖紙的修改。成員可以針對特定的提交或分支提出反饋，以改進設計和解決問題。 總的來說，將 Git 整合到 AutoCAD 製圖流程中，可以提高團隊的效率、管理圖紙的版本和更改，並促進團隊成員之間的協作和溝通。 議題2 在 Windows 實際 demo git client(客戶端) 與 git server(服務器)， 該如何進行? -設置 Git 伺服器 選擇伺服器軟體：在 Windows 上，可以使用像 GitLab、Bitbucket、Gogs 或 Gitea 這樣的工具來建立 Git 伺服器。這些工具提供了簡單的安裝和管理界面。 安裝 Git 伺服器：根據選擇的工具，下載並按照其官方文件的指示安裝 Git 伺服器。 配置 Git 伺服器：在安裝完成後，按照文件指示進行必要的配置，例如建立管理員帳戶、設置存儲庫等。 啟動 Git 伺服器服務：根據選擇的工具，啟動 Git 伺服器服務。 -設置 Git 客戶端 安裝 Git：如果 Windows 系統尚未安裝 Git 客戶端，可以從 Git 官方網站 下載安裝程序，並按照提示進行安裝。 配置 Git 客戶端：打開 Git Bash（Git 命令行工具），設置使用者信息： 1 git config --global user.name \"你的名字\" 2 git config --global user.email \"你的郵件@example.com\" 建立本地倉庫：在電腦上建立一個本地 Git 倉庫： 1 mkdir my_project 2 cd my_project 3 git init -連接 Git 客戶端和伺服器 新增遠端倉庫：將本地倉庫與遠端 Git 伺服器關聯： 1 git remote add origin <伺服器位址> 這裡的 <伺服器位址> 是你的 Git 伺服器的位址。 推送程式碼：將程式碼推送到 Git 伺服器： 1 git push -u origin master 這樣可以將本地 master 分支的更改推送到遠端伺服器。 拉取程式碼：如果有其他人在伺服器上修改了程式碼，可以拉取這些更改到本地倉庫： 1 git pull origin master -進行示範 在示範中，可以展示如何使用 Git 客戶端進行程式碼的提交、推送和拉取操作，以及如何通過 Git 伺服器來協作和管理專案。可以示範一些常見的 Git 命令，例如 git status、git log 等，以及如何解決可能出現的衝突等情況。 通過這樣的示範，可以了解如何在 Windows 上使用 Git 來進行版本控制和團隊協作。","tags":"w6","url":"./2024-Spring-w6-blog-tutorial.html"},{"title":"w5課程","text":"以 iframe 嵌入先前的教學影片做課前預習 1.在Replit 平台上的分組倉儲權限設定 2.Putty Solvespace STL 零件檢視方法 3.大規模人工智慧運算的時代：前景、影響及回應","tags":"w5","url":"./2024-Spring-w5-blog-tutorial.html"},{"title":"w4課程","text":"有關建立網站:網站指的是 Web site針對網頁瀏覽器檢視的內容加以管理，利用 Github 所提供的 Pages 功能來建立網頁進行管理。 Replit靜態網站檢視:若要執行動態網站，可以在 Shell 執行 python3 main.py 或者使用 Replit 的 Run 按鍵， Shell 執行 python3 main2.py 就可以執行倉儲內的靜態網站檢視。 Replit建立分組倉儲權限 分組網站 import 到 Replit, 必須自行在 /home/runner/.ssh 目錄下建立 id_rsa 與 config (id_rsa.pub 必須登錄到 Github 對應帳號)","tags":"w4","url":"./2024-Spring-w4-blog-tutorial.html"},{"title":"w3 課程","text":"利用可攜系統維護個人與分組網站 利用 Github Classroom 分組 在 mdewcm2024 帳號下, 期中分組作業名稱為 1a(第一組)以此類推，我們這組是2a 利用 Github Codespaces 維護倉儲 使用 Replit 管理分組網站, 必須採動態建立 .ssh 目錄中的私鑰與 config, 過程比較複雜。但若採用 Github Codespaces, 則可以在登入 Github 帳號下, 管理該帳號所有授權的倉儲, 包括分組倉儲與網站, 唯一的限制是每個月只能使用 120 core hours。 git 指令 git 的新增、提交與推送指令: git add . git commit -m \"說明字串\" git push 使用 git add . 表示要認列所進行的全部改版內容, git commit -m 執行之前, 若在近端使用, 必須先行設定 git config, 將 home_ipv6 目錄下的 .gitconfig 中明確列出改版者的身分, 其中包括: git config --global user.name \"提交者的 github 帳號名稱\" git config --global user.email \"提交者在 github 所登錄的 email address\" 使用者也可以利用 git version 查詢目前所使用的 git 版本. git status 通常用來查核目前近端的改版狀況, 例如: 是否與遠端倉儲同步, 或者遠端倉儲已經有了新版本. 若遠端倉儲已經有新的版本, 則在 git push 之前, 必須設法取下遠端資料進行合併後, 才能再提交新的版本並推送到遠端. git pull = git fetch + git merge 由於要將各組員的 wcm2024 設定為各分組倉儲的子模組, 因此必須利用 git submodule add 以各組員的學號作為子目錄名稱, 利用下列指令, 將組員倉儲新增為分組倉儲的子模組: git submodule add 倉儲網址 子目錄 若只要取下倉儲的主要內容, 可以使用下列指令: git clone 倉儲網址_協定.git 指定目錄與否 若要取下帶有子模組的倉儲, 且可能該子模組還有設定其他子模組, 則必須要加上 --recurse-submodules: git clone --recurse-submodules 倉儲網址_協定.git 指定目錄與否","tags":"w3","url":"./2024-Spring-w3-blog-tutorial.html"},{"title":"w2 課程","text":"完成 Github 中個人倉儲與網站的建立與維護個人與分組網站 1.確認所有學員已經建立帳號:帶有以 Python 編寫的動態網站程式, 以及位於 content 目錄中的靜態網頁資料 2.確認學員會用replit維護網站:Replit 檢視動態網站或網誌推送到 Github 之前的內容, 必須要在動態與靜態模式中擇一使用 3.如何利用Codespaces維護網站:Codespaces 中維護 wcm2024 的過程幾乎如同在 localhost Windows 10 或 11 的操作系統環境中進行","tags":"w2","url":"./2024-Spring-w2-blog-tutorial.html"},{"title":"w1課程","text":"登入 MS Online 並建立 Github 帳號, 以及利用 cmsimde_site 作為 Template 建立個人課程網站 建立Github帳號 1.登入 MS Online(網際內容管理課程的 MS 團隊代碼: ry8vdyo)→2.建立 Github 帳號(用來建立並維護個人的課程倉儲與網站)→3.建立個人課程網站(網際內容管理的個人課程網站名稱為 wcm2024)","tags":"w1.","url":"./2024-Spring-w1.-blog-tutorial.html"},{"title":"2024 Spring 課程","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 內容管理系統 使用者可以自行利用 cmsimde_site 倉儲作為 Template, 建立自己的網站內容管理系統. 引用網站網址連結的方法: cmsimde_site - 在文章中多次引用同一個網站連結時, 可以使用此種方法. https://github.com/mdecycu/cmsimde_site - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法. cmsimde_site - 也可以使用 Markdown 的標準網站連結使用格式. # 引用 Python 程式的方法 for i in range(10): print(i, \"列出字串\") 也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼. 從 1 累加到 100: 1 add to 100 將 iterable 與 iterator 相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. Filename: .py Run Output 清除輸出區 清除繪圖區 Reload 從 1 累加到 100 part2: 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block Filename: .py Run Output 清除輸出區 清除繪圖區 Reload","tags":"w1","url":"./2024-Spring-w1-blog-tutorial.html"}]};